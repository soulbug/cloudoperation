/**
 * This file was generated by the Jeddict
 */ 

package com.gsafer.smartoperation.entity;

import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


@Entity
@Table(name="T_PROCESSOR_MAP")
public class ProcessorMap { 

    @Column(name="PROCESSOR_MAP_ID",table="T_PROCESSOR_MAP",nullable=false)
    @Id
    @GeneratedValue(generator="S_T_PROCESSOR_MAP",strategy=GenerationType.SEQUENCE)
    @SequenceGenerator(name="S_T_PROCESSOR_MAP",sequenceName="S_T_PROCESSOR_MAP")
    private Integer processorMapId;

    /**
     * 前置机内网映射ip
     */
    @Column(name="IP",table="T_PROCESSOR_MAP",length=16)
    @Basic
    private String ip;

    /**
     * 前置机内网映射端口内网
     */
    @Column(name="PORT_IN",table="T_PROCESSOR_MAP")
    @Basic
    private short portIn;

    /**
     * 前置机内网映射端口外网
     */
    @Column(name="PORT_OUT",table="T_PROCESSOR_MAP")
    @Basic
    private short portOut;

    @Column(name="CREATE_TIME",table="T_PROCESSOR_MAP")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime = new java.util.Date();;

    /**
     * 状态：0为正常，1为被删除
     */
    @Column(name="STATUS",table="T_PROCESSOR_MAP")
    @Basic
    private short status;

    @ManyToOne(targetEntity = HospitalOperation.class)
    @JoinColumn(name="HOSPITAL_OPERATION_ID",referencedColumnName="HOSPITAL_OPERATION_ID",nullable=false,updatable=false)
    private HospitalOperation hospitalOperation;

    public Integer getProcessorMapId() {
        return this.processorMapId;
    }

    public void setProcessorMapId(Integer processorMapId) {
        this.processorMapId = processorMapId;
    }


    public String getIp() {
        return this.ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }


    public short getPortIn() {
        return this.portIn;
    }

    public void setPortIn(short portIn) {
        this.portIn = portIn;
    }


    public short getPortOut() {
        return this.portOut;
    }

    public void setPortOut(short portOut) {
        this.portOut = portOut;
    }


    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }


    public short getStatus() {
        return this.status;
    }

    public void setStatus(short status) {
        this.status = status;
    }


    public HospitalOperation getHospitalOperation() {
        return this.hospitalOperation;
    }

    public void setHospitalOperation(HospitalOperation hospitalOperation) {
        this.hospitalOperation = hospitalOperation;
    }


    @Override
    public boolean equals(Object obj) {
        if (obj == null) {return false;}
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {return false;}
        final ProcessorMap other = (ProcessorMap) obj;
        if (!java.util.Objects.equals(this.getProcessorMapId(), other.getProcessorMapId())) {        return false;        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 97 * hash + (this.getProcessorMapId() != null ? this.getProcessorMapId().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "ProcessorMap{" + " processorMapId=" + processorMapId + ", ip=" + ip + ", portIn=" + portIn + ", portOut=" + portOut + ", createTime=" + createTime + ", status=" + status + '}';
    }

}

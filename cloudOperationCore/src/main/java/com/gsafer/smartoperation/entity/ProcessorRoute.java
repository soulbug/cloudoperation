/**
 * This file was generated by the Jeddict
 */ 

package com.gsafer.smartoperation.entity;

import java.util.Date;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


@Entity
@Table(name="T_PROCESSOR_ROUTE")
public class ProcessorRoute { 

    @Column(name="PROCESSOR_ROUTE_ID",table="T_PROCESSOR_ROUTE",nullable=false)
    @Id
    @GeneratedValue(generator="S_T_PROCESSOR_ROUTE",strategy=GenerationType.SEQUENCE)
    @SequenceGenerator(name="S_T_PROCESSOR_ROUTE",sequenceName="S_T_PROCESSOR_ROUTE")
    private Integer processorRouteId;

    @Column(name="PROCESSOR_ROUTE_ETH",table="T_PROCESSOR_ROUTE")
    @Basic
    private short eth;

    @Column(name="PROCESSOR_ROUTE_GATEWAY",table="T_PROCESSOR_ROUTE",length=16)
    @Basic
    private String gateway;

    @Column(name="PROCESSOR_ROUTE_NETMASK",table="T_PROCESSOR_ROUTE",length=20)
    @Basic
    private String netmask;

    @Column(name="STATUS",table="T_PROCESSOR_ROUTE")
    @Basic
    private short status;

    @Column(name="CREATE_TIME",table="T_PROCESSOR_ROUTE")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date createTime = new java.util.Date();;

    @Column(name="REMARK",table="T_PROCESSOR_ROUTE",length=50)
    @Basic
    private String remark;

    @ManyToOne(targetEntity = HospitalOperation.class)
    @JoinColumn(name="HOSPITAL_OPERATION_ID",referencedColumnName="HOSPITAL_OPERATION_ID",nullable=false,updatable=false)
    private HospitalOperation hospitalOperation;

    public Integer getProcessorRouteId() {
        return this.processorRouteId;
    }

    public void setProcessorRouteId(Integer processorRouteId) {
        this.processorRouteId = processorRouteId;
    }


    public short getEth() {
        return this.eth;
//        return 1;
    }

    public void setEth(short eth) {
        this.eth = eth;
    }


    public String getGateway() {
        return this.gateway;
    }

    public void setGateway(String gateway) {
        this.gateway = gateway;
    }


    public String getNetmask() {
        return this.netmask;
    }

    public void setNetmask(String netmask) {
        this.netmask = netmask;
    }


    public short getStatus() {
        return this.status;
    }

    public void setStatus(short status) {
        this.status = status;
    }


    public Date getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }


    public String getRemark() {
        return this.remark;
    }

    public void setRemark(String remark) {
        this.remark = remark;
    }


    public HospitalOperation getHospitalOperation() {
        return this.hospitalOperation;
    }

    public void setHospitalOperation(HospitalOperation hospitalOperation) {
        this.hospitalOperation = hospitalOperation;
    }


    @Override
    public boolean equals(Object obj) {
        if (obj == null) {return false;}
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {return false;}
        final ProcessorRoute other = (ProcessorRoute) obj;
        if (!java.util.Objects.equals(this.getProcessorRouteId(), other.getProcessorRouteId())) {        return false;        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 59 * hash + (this.getProcessorRouteId() != null ? this.getProcessorRouteId().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "ProcessorRoute{" + " processorRouteId=" + processorRouteId + ", eth=" + eth + ", gateway=" + gateway + ", netmask=" + netmask + ", status=" + status + ", createTime=" + createTime + ", remark=" + remark + '}';
    }

}
